apiVersion: apps/v1
kind: Deployment

metadata:
  name: bggapp-deploy
  namespace: bggns
  labels:
    app: bgg
    svc: app

spec:
  replicas: 3
  
  selector:
    matchLabels:
      app: bgg
      svc: app

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  
  template:
    metadata:
      name: bggapp-pod
      namespace: bggns
      labels:
        app: bgg
        svc: app
    
    spec:
      containers:
        - name: bggapp-container
          image: stackupiss/bgg-backend:v2
          imagePullPolicy: IfNotPresent
          env:
            - name: BGG_DB_USER
              value: root
            - name: BGG_DB_HOST
              value: bggdb-svc.bggns.svc.cluster.local
            - name: BGG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bgg-secrets
                  key: db_password
          ports:
            - name: bggapp-port
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /healthz
              port: bggapp-port
            timeoutSeconds: 5
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /healthz
              port: bggapp-port
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          resources: {}
---
apiVersion: v1
kind: Service

metadata:
  name: bggapp-svc
  namespace: bggns
  labels:
    app: bgg
    svc: app

spec:
  type: ClusterIP

  selector:
    app: bgg
    svc: app
  
  ports:
  - name: bggapp-port
    port: 8080
    targetPort: bggapp-port
---
apiVersion: v1
kind: Secret
metadata:
  name: bgg-secrets
  namespace: bggns
type: Opaque

data:
  db_password: Y2hhbmdlaXQ=
